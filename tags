!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ProgressBar	utils.py	/^class ProgressBar:$/;"	c
Segment_Data	import_utils.py	/^Segment_Data = {}$/;"	v
SimpleNet	nets/simple_net.py	/^class SimpleNet(nn.Module):$/;"	c
Timer	utils.py	/^class Timer:$/;"	c
__init__	nets/simple_net.py	/^    def __init__(self):$/;"	m	class:SimpleNet
__init__	utils.py	/^    def __init__(self, iterations):$/;"	m	class:ProgressBar
__init__	utils.py	/^    def __init__(self, time_s):$/;"	m	class:Timer
__str__	utils.py	/^    def __str__(self):$/;"	m	class:ProgressBar	file:
__update_amount	utils.py	/^    def __update_amount(self, new_amount):$/;"	m	class:ProgressBar	file:
animate	utils.py	/^    def animate(self, iter):$/;"	m	class:ProgressBar
batch_size	train.py	/^batch_size = 5 # Mini batch size$/;"	v
check	utils.py	/^    def check(self):$/;"	m	class:Timer
desktopDir	utils.py	/^def desktopDir(*args):$/;"	f
forward	nets/simple_net.py	/^    def forward(self, x, metadata):$/;"	m	class:SimpleNet
get_camera_data	train.py	/^def get_camera_data():$/;"	f
get_data	import_utils.py	/^def get_data(run_code_num,seg_num,offset,slen,img_offset,img_slen,ignore=[],require_one=[],smooth_steer=True):$/;"	f
get_metadata	train.py	/^def get_metadata():$/;"	f
hdf5_runs_path	import_utils.py	/^hdf5_runs_path = desktopDir('bair_car_data\/hdf5\/runs')$/;"	v
hdf5_segment_metadata_path	import_utils.py	/^hdf5_segment_metadata_path = desktopDir('bair_car_data\/hdf5\/segment_metadata')$/;"	v
homeDir	utils.py	/^def homeDir(*args):$/;"	f
home_path	utils.py	/^home_path = os.path.expanduser("~")$/;"	v
instantiate_net	train.py	/^def instantiate_net():$/;"	f
join	utils.py	/^def join(*args):$/;"	f
load_hdf5	import_utils.py	/^def load_hdf5(path):$/;"	f
load_obj	import_utils.py	/^def load_obj(name ):$/;"	f
load_run_codes	import_utils.py	/^def load_run_codes():$/;"	f
load_run_data	import_utils.py	/^def load_run_data(run_code_num):$/;"	f
load_run_data_progress	train.py	/^def load_run_data_progress():$/;"	f
load_steer_data	train.py	/^def load_steer_data():$/;"	f
model_init_params	train.py	/^def model_init_params():$/;"	f
num_training_sets	train.py	/^num_training_sets = 10000 # Number of mini-batches$/;"	v
pick_data	train.py	/^def pick_data():$/;"	f
print_net	train.py	/^def print_net():$/;"	f
print_rate	train.py	/^print_rate = 1000 # Print every 1000 mini-batches$/;"	v
reset	utils.py	/^    def reset(self):$/;"	m	class:Timer
run_job	train.py	/^def run_job( fun, job_title): # Simply runs function and prints out data regarding it$/;"	f
tab_count	train.py	/^tab_count = 0$/;"	v
train	train.py	/^def train():$/;"	f
update_iteration	utils.py	/^    def update_iteration(self, elapsed_iter):$/;"	m	class:ProgressBar
